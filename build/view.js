(()=>{class t{constructor(){this.popups=[],this.isReady=!1,this.visitorType=this.getVisitorType(),this.deviceType=this.getDeviceType(),this.triggeredPopups=new Set,this.scrollDepths=new Map,this.timers=new Map,this.sessionShownPopups=new Set,this.debugMode="1"===this.getUrlParam("poppit-debug"),this.testMode="1"===this.getUrlParam("poppit-test"),this.rateLimits=new Map,this.init()}init(){"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.onReady()):this.onReady()}onReady(){this.debug("Poppit initialized"),this.isReady=!0,this.findPopups(),this.setupEventListeners(),setTimeout(()=>{this.processPopups()},100)}findPopups(){try{const t=document.querySelectorAll("[data-popup-id]");this.debug(`Found ${t.length} popup blocks`),t.forEach((e,o)=>{const s=this.extractPopupData(e);s&&this.shouldShowPopup(s)?(this.popups.push(s),this.debug(`Added popup ${s.id} to queue (${o+1}/${t.length})`)):this.debug(`Skipped popup ${s?.id||"unknown"} due to targeting rules or previous display`)}),this.debug(`Total popups in queue: ${this.popups.length}`)}catch(t){console.error("Error finding popups:",t)}}extractPopupData(t){try{const e={id:this.sanitizeString(t.dataset.popupId||""),type:this.sanitizeString(t.dataset.popupType||"modal"),triggerType:this.sanitizeString(t.dataset.triggerType||"time"),triggerDelay:this.sanitizeNumber(t.dataset.triggerDelay,3,0,300),scrollDepth:this.sanitizeNumber(t.dataset.scrollDepth,50,0,100),exitIntent:"true"===t.dataset.exitIntent,targeting:this.parseJSON(t.dataset.targeting,{devices:["desktop","tablet","mobile"],userType:"all"}),allowReset:"true"===t.dataset.allowReset,resetDelay:this.sanitizeNumber(t.dataset.resetDelay,60,1,10080),element:t,shown:!1,timestamp:Date.now()};return!e.id||e.id.length>50?(this.debug("Invalid or missing popup ID"),null):e}catch(t){return console.warn("Error parsing popup data:",t),null}}sanitizeString(t,e=100){return"string"!=typeof t?"":t.trim().substring(0,e)}sanitizeNumber(t,e=0,o=0,s=Number.MAX_SAFE_INTEGER){const i=parseInt(t,10);return isNaN(i)?e:Math.min(Math.max(i,o),s)}parseJSON(t,e={}){try{if(!t)return e;const o=JSON.parse(t);return"object"==typeof o&&null!==o?o:e}catch(t){return e}}getUrlParam(t){return new URLSearchParams(window.location.search).get(t)}shouldShowPopup(t){try{return t.targeting.devices.includes(this.deviceType)?"all"!==t.targeting.userType&&t.targeting.userType!==this.visitorType?(this.debug(`Popup ${t.id} filtered out by visitor type targeting`),!1):this.testMode?(this.debug(`Test mode enabled - popup ${t.id} will be shown`),!0):this.sessionShownPopups.has(t.id)?(this.debug(`Popup ${t.id} already shown in current session`),!1):this.checkPopupResetStatus(t):(this.debug(`Popup ${t.id} filtered out by device targeting`),!1)}catch(t){return console.error("Error in shouldShowPopup:",t),!1}}checkPopupResetStatus(t){try{const e=`poppit_${t.id}`,o=localStorage.getItem(e);if(!o)return this.debug(`Popup ${t.id} never shown before`),!0;const s=this.parseJSON(o);if(!s.lastShown)return!0;const i=new Date(s.lastShown),r=new Date;if(!t.allowReset)return this.debug(`Popup ${t.id} already shown and reset not allowed`),!1;const p=(r-i)/6e4,n=t.resetDelay;return p>=n?(this.debug(`Popup ${t.id} reset period expired (${Math.round(p)}/${n} minutes)`),!0):(this.debug(`Popup ${t.id} still in reset cooldown (${Math.round(p)}/${n} minutes)`),!1)}catch(t){return console.warn("Error parsing popup reset data:",t),!0}}processPopups(){try{this.debug("Processing popup triggers..."),this.popups.forEach(t=>{switch(this.debug(`Setting up trigger for popup ${t.id}: ${t.triggerType}`),this.clearPopupTriggers(t.id),t.triggerType){case"time":this.setupTimeBasedTrigger(t);break;case"scroll":this.setupScrollTrigger(t);break;case"exit":this.setupExitIntentTrigger(t);break;case"load":setTimeout(()=>this.showPopup(t),100)}})}catch(t){console.error("Error processing popups:",t)}}clearPopupTriggers(t){this.timers.has(t)&&(clearTimeout(this.timers.get(t)),this.timers.delete(t),this.debug(`Cleared existing timer for popup ${t}`)),this.triggeredPopups.delete(t),this.scrollDepths.delete(t)}setupTimeBasedTrigger(t){const e=Math.max(1e3*t.triggerDelay,100);this.debug(`Setting timer for popup ${t.id}: ${e}ms`);const o=setTimeout(()=>{this.debug(`Timer fired for popup ${t.id}`),this.triggeredPopups.has(t.id)||this.showPopup(t),this.timers.delete(t.id)},e);this.timers.set(t.id,o)}setupScrollTrigger(t){this.scrollDepths.set(t.id,{popup:t,targetDepth:t.scrollDepth,triggered:!1}),this.debug(`Scroll trigger set for popup ${t.id} at ${t.scrollDepth}%`)}setupExitIntentTrigger(t){let e=!1;const o=s=>{e||this.triggeredPopups.has(t.id)||(s.clientY<=0||null===s.relatedTarget&&s.target===document.documentElement)&&(e=!0,this.debug(`Exit intent triggered for popup ${t.id}`),this.showPopup(t),document.removeEventListener("mouseleave",o),document.removeEventListener("mousemove",i))};let s=0;const i=r=>{e||this.triggeredPopups.has(t.id)||(r.clientY<100&&s>r.clientY+50&&(e=!0,this.debug(`Exit intent triggered via mouse movement for popup ${t.id}`),this.showPopup(t),document.removeEventListener("mouseleave",o),document.removeEventListener("mousemove",i)),s=r.clientY)};document.addEventListener("mouseleave",o),document.addEventListener("mousemove",i)}setupEventListeners(){try{let t;window.addEventListener("scroll",()=>{clearTimeout(t),t=setTimeout(()=>{this.handleScroll()},100)},{passive:!0}),document.addEventListener("click",t=>{t.target&&(t.target.classList.contains("popup-close")||t.target.classList.contains("popup-overlay")&&t.target===t.currentTarget)&&(t.preventDefault(),this.closePopup(t.target.closest(".popup-overlay")))}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.closeAllPopups()}),document.addEventListener("submit",t=>{t.target&&t.target.classList.contains("popup-email-form")&&(t.preventDefault(),this.handleEmailSubmission(t.target))})}catch(t){console.error("Error setting up event listeners:",t)}}handleScroll(){try{const t=window.pageYOffset||document.documentElement.scrollTop,e=document.body.scrollHeight-window.innerHeight,o=e>0?t/e*100:0;this.scrollDepths.forEach((t,e)=>{!t.triggered&&!this.triggeredPopups.has(e)&&o>=t.targetDepth&&(t.triggered=!0,this.debug(`Scroll trigger activated for popup ${e} at ${Math.round(o)}%`),this.showPopup(t.popup),this.scrollDepths.delete(e))})}catch(t){console.error("Error in scroll handler:",t)}}showPopup(t){try{if(t.shown||this.triggeredPopups.has(t.id))return void this.debug(`Popup ${t.id} already shown or triggered`);this.debug(`Showing popup ${t.id}`),this.triggeredPopups.add(t.id),this.sessionShownPopups.add(t.id),t.shown=!0,this.timers.has(t.id)&&(clearTimeout(this.timers.get(t.id)),this.timers.delete(t.id));const e=this.createPopupHTML(t);document.body.insertAdjacentHTML("beforeend",e);const o=document.getElementById(`popup-${t.id}`);if(o&&(o.offsetHeight,requestAnimationFrame(()=>{o.classList.add("popup-active")})),this.trackEvent(t.id,"display"),!this.testMode)try{const e=`poppit_${t.id}`,o={lastShown:(new Date).toISOString(),showCount:this.getShowCount(t.id)+1};localStorage.setItem(e,JSON.stringify(o))}catch(t){console.warn("Failed to save popup data to localStorage:",t)}}catch(t){console.error("Error showing popup:",t)}}getShowCount(t){try{const e=`poppit_${t}`,o=localStorage.getItem(e);if(o)return this.parseJSON(o).showCount||0}catch(t){console.warn("Error getting show count:",t)}return 0}createPopupHTML(t){try{const e=t.element;if(!e)return"";const o=e.querySelector(".popup-title"),s=e.querySelector(".popup-text"),i=o?this.sanitizeHTML(o.innerHTML):"",r=s?this.sanitizeHTML(s.innerHTML):"",p="true"===e.dataset.emailEnabled,n=this.sanitizeString(e.dataset.emailPlaceholder||"Enter your email",100),a=this.sanitizeString(e.dataset.buttonText||"Subscribe",50),l="false"!==e.dataset.showCloseButton,u=this.sanitizeNumber(100*e.dataset.overlayOpacity,80,0,100)/100;return`\n\t\t\t\t<div class="popup-overlay animation-${this.sanitizeString(e.dataset.animation||"fadeIn",20)}" id="popup-${t.id}" style="background: rgba(0, 0, 0, ${u})">\n\t\t\t\t\t<div class="popup-container popup-${t.type}" role="dialog" aria-modal="true" aria-labelledby="popup-title-${t.id}">\n\t\t\t\t\t\t${l?'<button class="popup-close" aria-label="Close popup">Ã—</button>':""}\n\t\t\t\t\t\t<div class="popup-content">\n\t\t\t\t\t\t\t${i?`<h3 class="popup-title" id="popup-title-${t.id}">${i}</h3>`:""}\n\t\t\t\t\t\t\t${r?`<div class="popup-text">${r}</div>`:""}\n\t\t\t\t\t\t\t${p?`\n\t\t\t\t\t\t\t\t<form class="popup-email-form" data-popup-id="${t.id}" novalidate>\n\t\t\t\t\t\t\t\t\t<input type="email" class="popup-email-input" placeholder="${n}" required autocomplete="email" maxlength="254">\n\t\t\t\t\t\t\t\t\t<button type="submit" class="popup-submit-btn">${a}</button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t`:""}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`}catch(t){return console.error("Error creating popup HTML:",t),""}}sanitizeHTML(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}closePopup(t){try{if(!t)return;t.classList.remove("popup-active"),setTimeout(()=>{t.parentNode&&t.remove()},300);const e=t.id.replace("popup-","");e&&(this.trackEvent(e,"close"),this.debug(`Popup ${e} closed`))}catch(t){console.error("Error closing popup:",t)}}closeAllPopups(){try{const t=document.querySelectorAll(".popup-overlay.popup-active");t.forEach(t=>this.closePopup(t)),this.debug(`Closed ${t.length} active popups`)}catch(t){console.error("Error closing all popups:",t)}}handleEmailSubmission(t){try{const e=t.querySelector('input[type="email"]'),o=t.querySelector(".popup-submit-btn"),s=this.sanitizeString(t.dataset.popupId||"");if(!e||!o||!s)return void console.error("Missing form elements or popup ID");const i=e.value.trim();if(!this.isValidEmail(i))return void this.showFormError(t,"Please enter a valid email address.");if(this.isRateLimited("email",s))return void this.showFormError(t,"Please wait before submitting again.");const r=o.textContent;if(o.disabled=!0,o.textContent="Submitting...",this.clearFormError(t),"undefined"!=typeof poppitAjax&&poppitAjax.ajaxurl){const e=new FormData;e.append("action","poppit_email"),e.append("nonce",poppitAjax.nonce),e.append("email",i),e.append("popup_id",s),e.append("page_url",window.location.href),fetch(poppitAjax.ajaxurl,{method:"POST",body:e,credentials:"same-origin"}).then(t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()}).then(e=>{if(!e||!e.success)throw new Error(e?.data||"Submission failed");t.innerHTML='<div class="popup-success">Thank you for subscribing!</div>',this.trackEvent(s,"email_submit"),setTimeout(()=>{this.closePopup(document.getElementById(`popup-${s}`))},2e3)}).catch(e=>{console.error("Email submission error:",e),o.disabled=!1,o.textContent=r,this.showFormError(t,"Something went wrong. Please try again.")})}else console.log("Email submitted (fallback):",i),t.innerHTML='<div class="popup-success">Thank you for subscribing!</div>',setTimeout(()=>{this.closePopup(document.getElementById(`popup-${s}`))},2e3)}catch(t){console.error("Error in email submission handler:",t)}}isValidEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)&&t.length<=254}isRateLimited(t,e){const o=`${t}_${e}`,s=Date.now(),i=this.rateLimits.get(o);return!!(i&&s-i.lastAction<i.cooldown)||(this.rateLimits.set(o,{lastAction:s,cooldown:2e3}),!1)}showFormError(t,e){this.clearFormError(t);const o=document.createElement("div");o.className="popup-error",o.textContent=e,t.appendChild(o)}clearFormError(t){const e=t.querySelector(".popup-error");e&&e.remove()}trackEvent(t,e){try{if("undefined"!=typeof poppitAjax&&poppitAjax.ajaxurl){if(this.isRateLimited("track",t))return;const o=new FormData;o.append("action","poppit_track"),o.append("nonce",poppitAjax.nonce),o.append("popup_id",t),o.append("event_type",e),o.append("page_url",window.location.href),fetch(poppitAjax.ajaxurl,{method:"POST",body:o,credentials:"same-origin"}).catch(t=>{console.warn("Analytics tracking failed:",t)})}}catch(t){console.warn("Error in trackEvent:",t)}}debug(t){this.debugMode&&console.log(`[Poppit Debug] ${t}`)}getVisitorType(){try{return localStorage.getItem("poppit_visited")?"returning":(localStorage.setItem("poppit_visited","true"),"new")}catch(t){return"new"}}getDeviceType(){const t=window.innerWidth;return t<=768?"mobile":t<=1024?"tablet":"desktop"}resetPopupDisplay(t){if(this.testMode||this.debugMode)try{if(t){const e=`poppit_${t}`;localStorage.removeItem(e),this.sessionShownPopups.delete(t),this.triggeredPopups.delete(t),this.clearPopupTriggers(t),this.debug(`Reset display status for popup ${t}`)}else{const t=[];for(let e=0;e<localStorage.length;e++){const o=localStorage.key(e);o&&o.startsWith("poppit_")&&t.push(o)}t.forEach(t=>localStorage.removeItem(t)),this.sessionShownPopups.clear(),this.triggeredPopups.clear(),this.timers.forEach(t=>{clearTimeout(t)}),this.timers.clear(),this.scrollDepths.clear(),this.debug("Reset all popup display statuses")}}catch(t){console.error("Error resetting popup display:",t)}else console.warn("Reset methods only available in test or debug mode")}reprocessPopups(){if(this.testMode||this.debugMode)try{this.debug("Reprocessing popups..."),this.popups=[],this.findPopups(),this.processPopups()}catch(t){console.error("Error reprocessing popups:",t)}else console.warn("Reprocess method only available in test or debug mode")}getPopupStatus(t){if(!this.testMode&&!this.debugMode)return console.warn("Status method only available in test or debug mode"),null;try{const e=`poppit_${t}`,o=localStorage.getItem(e),s={popupId:t,shownInSession:this.sessionShownPopups.has(t),triggered:this.triggeredPopups.has(t),hasActiveTimer:this.timers.has(t),storedData:null,canShow:!1};if(o&&(s.storedData=this.parseJSON(o),s.storedData.lastShown)){const t=new Date(s.storedData.lastShown),e=(new Date-t)/6e4;s.minutesSinceLastShown=Math.round(e)}const i=document.querySelector(`[data-popup-id="${t}"]`);if(i){const t=this.extractPopupData(i);t&&(s.canShow=this.shouldShowPopup(t),s.allowReset=t.allowReset,s.resetDelay=t.resetDelay)}return s}catch(t){return console.error("Error getting popup status:",t),null}}}try{const e=new t;(e.debugMode||e.testMode)&&(window.Poppit=e,console.log("Poppit debug mode enabled. Use window.Poppit to access the instance."),console.log("Available methods:"),console.log("- resetPopupDisplay(popupId) - Reset display status for specific popup or all popups"),console.log("- reprocessPopups() - Re-scan and setup all popup triggers"),console.log("- getPopupStatus(popupId) - Get detailed status information for a popup"),console.log("URL parameters:"),console.log("- ?poppit-debug=1 (debug mode with console logs)"),console.log("- ?poppit-test=1 (test mode - ignores localStorage restrictions)"))}catch(t){console.error("Failed to initialize Poppit:",t)}})();